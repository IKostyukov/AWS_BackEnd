console: true
service: import-service
# app and org for use with dashboard.serverless.com
app: product-service-task4-1
plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
includeModules: true
dotenvVars: ${file(configs.js)}

org: igorok

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    SQS_URL:
      Ref: SQSQueue

  # you can overwrite defaults here
  stage: dev
  region: eu-west-1
  iamRoleStatments:
    - Effect: "Alow"
      Actions: "s3:*"
      Recource:
        - "arn:aws:s3:::import-service-epam"

    - Effect: "Alow"
      Actions:
        - "s3:*"
      Recource: "arn:aws:s3:::import-service-epam/*"

    - Effect: "Alow"
      Actions:
        - "sqs:*"
      Recource:
        - Fn::GetAtt: [SQSQueue, Arn]

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: import-service-queue

    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: product-service-topic

    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: igorkostukov@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic

    # you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
          - Effect: "Allow"
            Action:
              - "s3:ListBucket"
            Resource:
              {
                "Fn::Join":
                  ["", ["arn:aws:s3:::", { "Ref": "import-service-epam" }]],
              }
          - Effect: "Allow"
            Action:
              - "s3:PutObject"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - "Ref": "import-service-epam"
                  - "/*"

# you can add packaging information here
package:
 patterns:
   - '!exclude-me.js'
   - '!exclude-me-dir/**'
   - include-me.js
   - include-me-dir/**

functions:
  importProductsFile:
    handler: handlersProduct/importProductsFile.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
              headers:
                foo: false
              paths:
                bar: false
  importFileParser:
    handler: handlersProduct/importFileParser.importFileParser
    events:
      - s3:
          bucket: import-service-epam
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
        existing: true